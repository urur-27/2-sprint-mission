plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.sprint.mission'
version = '1.2-M8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.postgresql:postgresql:42.7.3'
    runtimeOnly 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // dotenv로 환경변수 로딩
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // AWS S3 SDK 의존성
    implementation 'software.amazon.awssdk:s3:2.31.7'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
    useJUnitPlatform {
        excludeTags 'integration'
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

// .env 파일 로드
def envFile = new File(".env")
if (envFile.exists()) {
    envFile.eachLine { line ->
        line = line.trim()
        if (line && !line.startsWith("#") && line.contains("=")) {
            def (key, value) = line.split("=", 2)
            if (!System.getenv(key)) {
                System.setProperty(key.trim(), value.trim())
            }
        }
    }
}

def projectName = System.getProperty("PROJECT_NAME") ?: "discodeit"
def projectVersion = System.getProperty("PROJECT_VERSION") ?: "1.2-M8"

// jar 파일 형식 설정
jar {
    archiveBaseName = projectName
    archiveVersion = projectVersion
}